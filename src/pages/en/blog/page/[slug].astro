---
import Blog from "@/components/Blog.astro";
import PageHeader from "@/components/PageHeader.astro";
import Shape from "@/components/Shape.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import Pagination from "@/layouts/components/Pagination.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import { getLangFromUrl, getLocalizedEntry } from "@/i18n/utils";

export async function getStaticPaths() {
  const posts = await getSinglePage("blog");
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}

// Get current language from URL
const lang = getLangFromUrl(Astro.url);
console.log(`[DEBUG-BLOG-PAGE] Current language: ${lang}`);

// Get blog index content
const blogIndex = await getLocalizedEntry<CollectionEntry<"blog">>(
  () => getCollection("blog"),
  "index",
  lang,
  "blog"
);

// Default blog data if no content is found
const blogData = blogIndex?.data || {
  title: "Blog",
  page_title: "Our Blog",
  meta_title: "Blog Posts",
  description: "Read our latest articles and updates",
  image: ""
};

const { slug } = Astro.params;
const posts = await getSinglePage("blog");
const sortedPosts = sortByDate(posts);
const recentPost = sortedPosts.filter((item) => !item.data.featured);
const totalPages = Math.ceil(recentPost.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = recentPost.slice(indexOfFirstPost, indexOfLastPost);
const page_data = {
  index_title: blogData.title,
  slug: `page / ${slug}`,
};
---

<Base
  title={blogData.title}
  meta_title={blogData.meta_title}
  description={blogData.description}
  image={blogData.image}
>
  <Shape />
  <section class="page-hero pt-16">
    <div class="container">
      <PageHeader page_data={page_data} />
    </div>
  </section>
  <section class="section">
    <div class="container">
      <h2 class="h4 mb-4">Recent Posts</h2>
      <Blog posts={currentPosts} />
      <Pagination
        section={"blog"}
        totalPages={totalPages}
        currentPage={currentPage}
      />
    </div>
  </section>
</Base>
