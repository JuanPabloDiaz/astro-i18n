---
import Blog from "@/components/Blog.astro";
import PageHeader from "@/components/PageHeader.astro";
import Shape from "@/components/Shape.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import Pagination from "@/layouts/components/Pagination.astro";
import { getCollection, render } from "astro:content";
import { sortByDate } from "@/lib/utils/sortFunctions";

export async function getStaticPaths() {
  const pages = await getCollection("blog");

  const paths = pages.map((page) => {
    const [lang, ...slug] = page.slug.split("/");
    return { params: { lang, slug: slug.join("/") || undefined }, props: page };
  });

  return paths;
}

const { lang, slug } = Astro.params;
const page = Astro.props;

const posts = await getCollection("blog");
const sortedPosts = sortByDate(posts);
const recentPost = sortedPosts.filter((item) => !item.data.featured);
const totalPages = Math.ceil(recentPost.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = recentPost.slice(indexOfFirstPost, indexOfLastPost);

const page_data = {
  index_title: page.data.title,
  slug: `page / ${slug}`,
};

const formattedDate = page.data.date.toLocaleString(lang);
const { Content } = await render(page);
---

<Base
  title={page.data.title}
  meta_title={page.data.meta_title}
  description={page.data.description}
  image={page.data.image}
>
  <Shape />
  <section class="page-hero pt-16">
    <div class="container">
      <PageHeader page_data={page_data} />
    </div>
  </section>
  <section class="section">
    <div class="container">
      <h2 class="h4 mb-4">Recent Posts</h2>
      <Blog posts={currentPosts} />
      <Pagination
        section={"blog"}
        totalPages={totalPages}
        currentPage={currentPage}
        lang={lang}
      />
    </div>
  </section>
</Base>